<!DOCTYPE html>
<html>
<head>
   <link rel=stylesheet href="/css/reset.css">
   <link rel=stylesheet href="/css/synseer/main.css">
   <link rel=stylesheet href="/codemirror/lib/codemirror.css">
   <link rel=stylesheet href="/codemirror/theme/base16-light.css">

   <script src="/codemirror/lib/codemirror.js"></script>
   <script src="/codemirror/mode/ruby/ruby.js"></script>
   <script src="/js/jquery.js"></script>
   <script src="/js/synseer.js"></script>
   <script src="/js/mousetrap.js"></script>

   <style>
     body, html, .content, .layer, .CodeMirror {
       margin:  0;
       padding: 0;
       width:   100%;
       height:  100%;
     }

     .CodeMirror {
       padding:   1em;
       font-size: 1.5em;
     }

     .layer .CodeMirror-scroll { overflow: hidden !important; } /* They try really hard to put this there, so I have to use more specificity
                                                                   to remove it. Supposedly this will break things, but when I don't have it,
                                                                   it has big white bars (I assume these are scrollbars) along the bottom,
                                                                   as if the div were mis-aligned. */
     .currentElement { background: #d0c7a7; }                   /* mix($color-secondary-2-0, lighten($color-primary-0, 40%), 20%); */
     .cake .layer .CodeMirror { background: #ebd2c4; }
     .cake .layer .CodeMirror-gutters { background: #ebd2c4; }
   </style>
</head>

<body>
  <div class="content">

    <div class="icing">
      <div class="app_name"></div>
      <div class="total_score stats">
        <span class="stat">
          <span class="games_completed"></span>
          Completed
        </span>

        <span class="stat">
          <span class="correct"></span>
          Correct
        </span>

        <span class="stat">
          <span class="incorrect"></span>
          Incorrect
        </span>

        <span class="stat">
          <span class="time"></span>
          Total Time
        </span>
      </div>
    </div>

    <div class="cake game-board">
      <div class="layer">
        <textarea class="cm"><%= @game.fetch(:body) %></textarea>
        <div class="side"></div>
      </div>
    </div>

  </div>

  <script>
    (function() {
      'use strict';

      // -----  init/load the data from localstorage  -----
      var appState = {games: []};
      if(localStorage.appState === undefined)
        localStorage.appState = JSON.stringify(appState);
      else
        appState = JSON.parse(localStorage.appState);

      // -----  Keymap  -----
      var Mousetrap = require('mousetrap');
      var mousetrap = new Mousetrap(document);
      mousetrap.handleKey = function(character, modifiers, event) {
        if(event.type !== 'keyup') return;

        if(window.game && !window.game.isFinished())
          window.game.pressKey(character);
        else if(character == 'r')
          console.log('play again'); // playGame()
        else if(character == 'enter')
          returnToIndex();
      }


      // -----  play  -----
      var Synseer      = require('synseer');
      var KeymapStatus = require('synseer/keymap_status');
      playGame();

      // -----  functions  -----
      function returnToIndex() {
        window.location = window.location.origin;
      }

      function playGame() {
        var keymapStatus = new KeymapStatus(document.querySelector('.side'))

        var cm = CodeMirror.fromTextArea(
          document.querySelector('textarea.cm'),
          { lineNumbers:    true,
            theme:          'base16-light',
            autofocus:      false,
            scrollbarStyle: "null",
          }
        )

        // don't hijack my keys!
        function ignoreEvent(x, e) { e.codemirrorIgnore = true; }
        cm.on("keydown",  ignoreEvent);
        cm.on("keypress", ignoreEvent);
        cm.on("keyup",    ignoreEvent);

        var game = new Synseer.Game({
          codeMirror:      cm,
          statsView:       new Synseer.StatsView(document.querySelector('.stats')),
          ast:             <%= @game.fetch :json_ast %>,
          keyMap:          Synseer.DefaultKeymap,
          onFinished:      function(stats) {
                             // currently this summary does nothing interesting
                             var domFinished = document.createElement("div");
                             domFinished.classList.add("summary");
                             var node = document.createTextNode("This is new.");
                             domFinished.appendChild(node);
                             document.querySelector('body').appendChild(domFinished);

                             // save the data
                             var gameData        = stats;
                             gameData.id         = <%= @game.fetch(:id).inspect %>;
                             gameData.name       = <%= @game.fetch(:name).inspect %>;
                             appState.games.push(gameData);
                             appState.lastPlayed = gameData.id
                             localStorage.appState = JSON.stringify(appState);
                             // this will send it back to the main page immediately: window.location.pathname = '/';
                           },
          onPossibilities: function(input, possibilities) { keymapStatus.update(input, possibilities); }
        });
        window.game = game;
        game.init();
        game.start(function() { return new Date() }, setInterval);
      }
    })()
  </script>
</div>
</body>
</html>
