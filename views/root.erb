<!DOCTYPE html>
<html>
  <head>
    <link rel=stylesheet href="/css/reset.css">
    <link rel=stylesheet href="/css/synseer/main.css">
    <script src="/js/synseer.js"></script>
    <script src="/js/mousetrap.js"></script>
  </head>
<body>

<div class="content">
  <div class="icing">
    <a class="app_name" href="/">Synseer</a>
    <div class="total_score stats">
      <span class="stat">
        <span class="games_completed"></span>
        Completed
      </span>

      <span class="stat">
        <span class="correct"></span>
        Correct
      </span>

      <span class="stat">
        <span class="incorrect"></span>
        Incorrect
      </span>

      <span class="stat">
        <span class="time"></span>
        Total Time
      </span>
    </div>
  </div>


  <div class="cake">
    <div class="infoBox"></div>

    <table class="available_games">
      <tr class="headers">
        <th>Correct</th>
        <th>Incorrect</th>
        <th>Time</th>
        <th>Name</th>
      </tr>

      <% games.each do |_path, game| %>
        <tr class="game stats"
            data-id="<%= game.fetch(:id) %>"
            data-next-game="<%= game.fetch(:next_game) %>"
            >

          <td class="stat">
            <span class="correct"></span>
          </td>

          <td class="stat">
            <span class="incorrect"></span>
          </td>

          <td class="stat">
            <span class="time"></span>
          </td>

          <td>
            <a class="name" href="<%= game.fetch(:path) %>">
              <%= game.fetch(:name) %>
            </a>
          </td>
        </li>
      <% end %>
    </table>
  </div>

</div>

<script>
  'use strict';
  // init/load the data from localstorage
  var appState = {games: [], gamesById: {}};
  if(localStorage.appState === undefined)
    localStorage.appState = JSON.stringify(appState);
  else
    try {
      appState = JSON.parse(localStorage.appState);
    } catch(SyntaxError) {
      // noop
    }

  var firstGameId = <%= games.first.last.fetch(:id).inspect %>;

  function goToGame(id) {
    var gameElement = document.querySelector('[data-id="'+id+'"]');
    var gameLink    = gameElement && gameElement.querySelector('a');
    gameLink && gameLink.click();
  }

  var Synseer = require('synseer');

  // -----  Find best games  -----
  var gamesById = appState.gamesById||{};
  for(var i=0; i<appState.games.length; ++i) {
    var game = appState.games[i];
    var best = gamesById[game.id] || game;
    if     (best.numIncorrect < game.numIncorrect) /* noop */;
    else if(best.numIncorrect > game.numIncorrect) best = game;
    else if(best.duration     > game.duration)     best = game; // <-- there is no test on this one
    gamesById[game.id] = best
  }

  // ----- Don't track all games, it makes the game take longer the more you play -----
  appState.games = [];
  localStorage.appState = JSON.stringify(appState);

  // -----  Add scores to the games  -----
  var goPrev  = function() { /* noop, override this */ };
  var goNext  = function() { goToGame(firstGameId); };
  var infoBox = document.querySelector('.infoBox');
  infoBox.innerText = 'Press "Enter" to play ' + firstGameId;

  var forEach = Array.prototype.forEach;
  var scores  = document.querySelectorAll('.game.stats');
  forEach.call(scores, function(domScore) {
    // find the current game
    var view = new Synseer.StatsView(domScore);
    var game = gamesById[domScore.dataset["id"]];

    // update the game with the appropriate data
    if(game) {
      view.setStatus("Completed"); // swap with a class and change the colouring instead?
      view.setNumCorrect(game.numCorrect);
      view.setNumIncorrect(game.numIncorrect);
      view.setDuration(game.duration);

      if(game.id == appState.lastPlayed) {
        var next_game_id  = domScore.dataset['nextGame'] || firstGameId;
        infoBox.innerText = "Press " + '"r" to retry ' + game.id + ', "Enter" to play ' + next_game_id;

        goPrev = function() { goToGame(game.id) };
        goNext = function() { goToGame(next_game_id) };
      }
    } else {
      view.setStatus("Unattempted");
      view.setNumCorrect('-');
      view.setNumIncorrect('-');
      view.setDuration('-');
    }
  });

  // -----  total stats  -----
  var numCorrect     = 0;
  var numIncorrect   = 0;
  var duration       = 0;
  var gamesCompleted = Object.keys(gamesById).length;
  for(var id in gamesById) {
    numIncorrect += gamesById[id].numIncorrect;
    numCorrect   += gamesById[id].numCorrect;
    duration     += gamesById[id].duration;
  }

  var totalStatsView = new Synseer.StatsView(document.querySelector('.total_score'));
  totalStatsView.setNumCorrect(numCorrect);
  totalStatsView.setNumIncorrect(numIncorrect);
  totalStatsView.setDuration(duration);
  totalStatsView.setGamesCompleted(gamesCompleted);

  // -----  Keymap  -----
  var Mousetrap = require('mousetrap');
  var mousetrap = new Mousetrap(document);

  var firstDownThenUp = function(key, cb) {
    // you can erroneously get an up w/o a down, eg from pressing enter in the address bar
    // and you can pass them forward without consuming their keyup event, thus sending it to the next page,
    // so... here we are
    var bindUp = function() { mousetrap.bind(key, cb, 'keyup'); }
    mousetrap.bind(key, bindUp, 'keydown');
  }
  firstDownThenUp('r',     goPrev);
  firstDownThenUp('enter', goNext);

</script>
</body>
</html>
